@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model IEnumerable<Dissertation.Models.Item>

@{
    ViewData["Title"] = "Item Manager";
    string userId = "";
    bool isAdmin = false;
}

@if (signInManager.IsSignedIn(User))
{
    userId = userManager.GetUserId(User);
    isAdmin = await userManager.IsInRoleAsync(await userManager.GetUserAsync(User), "Admin");
}

<h1 class="text-center">Loan an Item</h1>
<hr />

<p class="text-center">
    <a asp-action="Create" class="btn btn-success margin-left: 50%">List an Item</a>
</p>


<div class="row">
    <section>
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card" style="border: none;">
                        <div class="card-body text-center">
                            <form asp-action="Index" method="get">
                                <div class="mb-3">
                                    <label>Search for an item</label>
                                    <input class="form-control text-center" type="search" placeholder="Search" aria-label="Search" name="searchString" />
                                    <label class="mt-1">Enter a postcode to show relevant items</label>
                                    <input class="form-control text-center" placeholder="Postcode" id="postcode" name="postcode" />
                                    <label class="mt-1">Enter a radius to search within</label>
                                    <input class="form-control mt-2 w-50 text-center" style="margin-left: 25%" type="number" placeholder="Radius to search" id="radius" name="radius" />
                                    <button class="btn btn-info mt-3" type="submit">Search</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <hr />
            </div>
        </div>
    </section>
</div>

@*Displays all classes*@
<div class="d-flex flex-wrap justify-content-between">
    @foreach (var item in Model) // Loops through each item and then displays each item in seperate cards
    {
        <div class="card mb-4 col-3 light-blue-card" style="margin-left: 10px; margin-right: 10px;">
            <div class="card-body">
                <a asp-action="Details" asp-route-id="@item.Id">
                    <img src="@Html.DisplayFor(modelItem => item.ThumbnailPath)" alt="Item image" style="display: block; margin-left: auto; margin-right: auto; width: 60%; height: auto;" />
                </a>
                <h5 class="card-title text-center mb-3">@Html.DisplayFor(modelItem => item.Name)</h5>
                <p class="card-text">
                    <strong>Category:</strong> @Html.DisplayFor(modelItem => item.Category.Name) <br />
                    <strong>Price:</strong> @Html.DisplayFor(modelItem => item.Price) <br />
                </p>
                <div class="d-flex justify-content-between">
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success w-100 mt-1">Details</a>
                </div>

                @if (userId == item.LoanerId || isAdmin)
                {
                    <div class="d-flex justify-content-between">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning w-100 mt-1">Edit</a>
                    </div>
                }
                
                @if (userId == item.LoanerId || isAdmin)
                {
                    <div class="d-flex justify-content-between">
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger w-100 mt-1">Delete</a>
                    </div>
                }
            </div>
        </div>
    }
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/geolocation.js"></script>
    <script>
        getLocation().then(postalCode => {
            document.getElementById('postcode').value = postalCode;
        })
    </script>
}
