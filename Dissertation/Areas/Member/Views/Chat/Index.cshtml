@using Microsoft.AspNetCore.Identity
@using Dissertation.Areas.Member.Models
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model IEnumerable<ChatNotificationViewModel>

@{
    ViewData["Title"] = "Chats";
	string userId = "";
}

@if (signInManager.IsSignedIn(User))
{
	userId = userManager.GetUserId(User);
}

<h1>Chats</h1>

<div class="container">
	@foreach (var chat in Model)
	{
			<a asp-area="Member" asp-controller="Chat" asp-action="Message" asp-route-id="@chat.Chat.Id" class="text-decoration-none">
			<div class="row">
				<div class="chat-box p-3 p mb-3 light-blue-card chat-link">
					<div class="row">
						<div class="chat-item-content col-4">
							@if (chat.Chat.UserOneId == userId)
							{
								<h5 style="margin-bottom: 0; color: black;" class="chat-card-text">Chat with: @chat.Chat.UserTwo.UserName</h5>
							}
							else
							{
								<h5 style="margin-bottom: 0; color: black;" class="chat-card-text">Chat with: @chat.Chat.UserOne.UserName</h5>
							}
						</div>
						<div class="chat-item-content col text-end">
							@if (@chat.Notification.SenderId != userId && !@chat.Notification.RecipientRead)
							{
								<h5 style="margin-bottom: 0; color: red;" class="chat-card-text chat-notification-text">New messages</h5>
							}
							else
							{
								<h5 style="margin-bottom: 0; color: black;" class="chat-card-text">No new messages</h5>
							}
						</div>
					</div>
				</div>
			</div>
			</a>
	}
</div>