@using Microsoft.AspNetCore.Identity
@using Dissertation.Areas.Member.Models
@using static Dissertation.Models.Enums
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model IEnumerable<Request>

@{
    ViewData["Title"] = "Requests";
	string userId = "";
}

@if (signInManager.IsSignedIn(User))
{
	userId = userManager.GetUserId(User);
}

<h1>Requests</h1>

<div class="container">
    @foreach (var request in Model)
    {
        <div class="row">
            <div class="chat-box p-3 p mb-3 light-blue-card">
				<div class="row">
					<div class="chat-item-content col-2">
						<a asp-area="Member" asp-controller="Item" asp-action="Details" asp-route-id="@request.Item.Id">
							<img src="@Html.DisplayFor(modelItem => request.Item.ThumbnailPath)" alt="Item image" style="display: block; margin-left: auto; margin-right: auto; margin-top: auto; margin-bottom: auto; max-width: 100%; max-height: 100%" />
						</a>
					</div>
					<div class="chat-item-content col-5">
						<p style="margin-bottom: 0" class="chat-card-text">Item: @request.Item.Name</p>
						<p style="margin-bottom: 0" class="chat-card-text">Request by: @request.Renter.UserName</p>
						<p style="margin-bottom: 0" class="chat-card-text">@request.RequestStart.ToString("dd/MM/yyyy") to @request.RequestEnd.ToString("dd/MM/yyyy")</p>
						@{
							var statusColour = request.Status switch
							{
								RequestStatus.Pending => "text-warning",
								RequestStatus.Accepted => "text-success",
								RequestStatus.Rejected => "text-danger",
								_ => "text-dark"
							};
						}
						<h4 style="color: @statusColour">Status: @request.Status</h4>
					</div>
					<div class="col text-end">
						<a class="btn btn-success mt-4" style="width: 100px" asp-action="AcceptRequest" asp-route-id="@request.Id">Accept</a>
						<br />
						<a class="btn btn-danger mt-3" style="width: 100px" asp-action="RejectRequest" asp-route-id="@request.Id">Reject</a>
					</div>
				</div>
			</div>
		</div>
	}
</div>